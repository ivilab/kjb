#!/bin/csh -f 

set num_args = ${#argv}

if (${num_args} != 2) then
    ${P_STDERR} "Script update_bin needs exactly two arguments."
    ${P_STDERR} "A source path and a target path."
    exit 1 
endif 

set source_path = "$1"
set target_path = "$2"

###############################################################################
# We don't want to change the time stamp of the bin dir to simplify using the
# time stamp on load dirs as a gauge of whether the cache is out of date. Here
# we remember time stamp of source_path. This is easier with a comparison file
# because there is more comonality on this way over multiple systems. 
#

set target_dir = `echo ${target_path} | sed 's#\(.*\)/[^/]*#\1#'`
# echo target_path: $target_path
# echo target_dir: $target_dir

if($?TMPDIR) then
    set tmp = "$TMPDIR"
else
    set tmp = "/tmp"
endif

set tmp = "$tmp/$USER"
mkdir -p ${tmp}

set clock_file = ${tmp}/clock.$$

touch -r ${target_dir} ${clock_file} 

###############################################################################

set time_stamp = `date +%y-%m-%d-%H-%M`

if (! -f ${source_path}) then
    ${P_STDERR} "${source_path} is not a file."
    exit 1
endif 

set have_slash  = `echo ${source_path} | grep -c "/"`

if ("${have_slash}" == "0") then
    set source_dir = "./"
else 
    set source_dir = `echo ${source_path} | sed 's#\(.*\)/[^/]*$#\1/#' | sed 's#///*#/#g'`
endif 
# echo source_dir: ${source_dir}

set source_name = `echo ${source_path} | sed 's#.*/\([^/]*\)$#\1#'`
# echo source_name: ${source_name}

set source_path = ${source_dir}${source_name} 
# echo source_path: ${source_path} 


if (-d ${target_path}) then 
   set target_path = ${target_path}/${source_name}
   # echo target_path: ${target_path}
endif 

set have_slash  = `echo ${target_path} | grep -c "/"`

if ("${have_slash}" == "0") then
    set target_dir = "./"
else 
    set target_dir = `echo ${target_path} | sed 's#\(.*\)/[^/]*$#\1/#' | sed 's#///*#/#g'`
endif 
# echo target_dir: ${target_dir}

set target_name = `echo ${target_path} | sed 's#.*/\([^/]*\)$#\1#'`
# echo target_name: ${target_name}

set target_path = ${target_dir}${target_name} 
# echo target_path: ${target_path} 

mkdir -p ${target_dir}
if ${status} exit 1 

if (-e ${target_path}) then
    mkdir -p ${target_dir}${target_name}-HISTORY
    if ${status} exit 1 

    /bin/mv ${target_path} ${target_dir}${target_name}-HISTORY/${target_name}-${time_stamp}
    if ${status} exit 1 
endif 

/bin/cp ${source_path} ${target_path} 
    
###############################################################################
# Reset the time of the target path to what it was before we started. 
#
touch -r ${clock_file} ${target_dir} 
/bin/rm -f ${clock_file}

###############################################################################


