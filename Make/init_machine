
if ($?EMULATE_WIN32 == 0) then
    setenv EMULATE_WIN32 0
endif 

if ($EMULATE_WIN32) then
    set uname="WIN32"
    set os_major_release=""
else if ( -x /bin/uname ) then
    set uname=`/bin/uname`
    set os_major_release=`/bin/uname -r | sed 's/\(.\).*/\1/'`
else if ( -x /usr/bin/uname ) then
    set uname=`/usr/bin/uname`
    set os_major_release=`/usr/bin/uname -r | sed 's/\(.\).*/\1/'`
else if ( -x /usr/local/bin/uname ) then
    set uname=`/usr/local/bin/uname -m`
    set os_major_release=`/bin/uname -r | sed 's/\(.\).*/\1/'`
else
    set uname unknown
    set os_release="0"
endif

setenv LINUX_FLAVOR ""
setenv OS2 ""
setenv CPU ""

if ("${uname}" == "Linux") then
#    setenv BASE_OS "linux"
#    setenv ARCH ""

   if (-x /bin/arch) then
       setenv ARCH `/bin/arch`
   else if ( -x /bin/uname ) then
       setenv ARCH `/bin/uname -m`
   else
       setenv ARCH "unknown" 
   endif 

   if ("`echo $ARCH | grep '[3-9]86'`" != "") then 
       setenv OS "linux_386"
   else
       setenv OS "linux_${ARCH}"
   endif 

   setenv  LINUX_FLAVOR "unknown"
   setenv  LINUX_FLAVOR_VERSION "unknown"

   if (-e /etc/centos-release) then
       setenv LINUX_FLAVOR "centos"
       setenv LINUX_FLAVOR_VERSION `cat /etc/os-release | grep VERSION_ID | sed 's/.*"\([0-9][0-9]*\).*/\1/'`
       setenv OS2 "_co${LINUX_FLAVOR_VERSION}"
   else if (-e /etc/redhat-release) then
       setenv LINUX_FLAVOR "redhat"
       setenv LINUX_FLAVOR_VERSION `cat /etc/os-release | grep VERSION_ID | sed 's/.*"\([0-9][0-9]*\).*/\1/'`
       setenv OS2 "_rh${LINUX_FLAVOR_VERSION}"
   else if ( -x /bin/uname ) then
       set is_unbuntu = `/bin/uname -a | grep -ic 'ubuntu'`
       if (${is_unbuntu}) then 
           setenv LINUX_FLAVOR "ubuntu"
           setenv LINUX_FLAVOR_VERSION `cat /etc/os-release | grep VERSION_ID | sed 's/.*"\([0-9][0-9]*\).*/\1/'`
           setenv OS2 "_ub${LINUX_FLAVOR_VERSION}"
       endif 
   endif 

   if (-e /proc/cpuinfo) then
#       example: want i5 from ". . . Intel(R) Core(TM) i5-3230M CPU @ 2.60 GHz"
        set test_iN = `grep -i 'i[0-9]-\?[0-9]*[MU]\? *CPU' /proc/cpuinfo |sort -u`
        # echo test_iN: $test_iN
        set test_xeon = `grep -i 'Intel.* Xeon' /proc/cpuinfo`
        set test_pD = `grep -i 'Pentium(.*)* *D *-*M* *CPU' /proc/cpuinfo`
        set test_p4 = `grep -i 'Pentium(.*)* *4 *-*M* *CPU' /proc/cpuinfo`
        set test_p3 = `grep -i "Pentium III" /proc/cpuinfo`
        set test_athlon = `grep -i "AMD Athlon" /proc/cpuinfo`
        set test_opteron = `grep -i "AMD Opteron" /proc/cpuinfo`
        set test_c2 = `grep -i 'Intel(R) Core(TM)2' /proc/cpuinfo`

        if ("${test_iN}" != "") then
            set iN_cpu = `echo ${test_iN} | sed 's/.* \(i[0-9]\)-\?[0-9]*[MU]\? CPU .*$/\1/'` 
            setenv CPU  ${iN_cpu}
        else if ("${test_xeon}" != "") then
            setenv CPU xeon
        else if ("${test_pD}" != "") then
            setenv CPU pD
        else if ("${test_p4}" != "") then
            setenv CPU p4
        else if ("${test_p3}" != "") then
            setenv CPU p3
        else if ("${test_athlon}" != "") then
            setenv CPU athlon
        else if ("${test_opteron}" != "") then
            setenv CPU opteron
        else if ("${test_c2}" != "") then
            setenv CPU c2
        else 
           setenv CPU "unknown"
        endif
   else 
       setenv CPU "unknown"
   endif 

    which lsb_release >& /dev/null
    if (! ${status}) then 
        set is_ubuntu = `lsb_release -a |& grep -c 'Ubuntu'`

        if (${is_ubuntu}) then
            setenv UBUNTU_RELEASE `lsb_release -a |& grep 'Release' | sed 's/^Release:.\([0-9]*\.[0-9]*\)$/\1/'`
        endif 
    endif 
   
else if ("${uname}" == "Darwin") then
   setenv OS         "mac_osx" 

   if (-x "/usr/bin/arch") then
       setenv CPU `/usr/bin/arch`
   else
       # setenv CPU `/usr/bin/uname -a | sed 's/.* \([^ ]*\)$/\1/'`
       setenv CPU `/usr/bin/uname -p | sed 's/powerpc/ppc/'`
   endif 

   if (-x /usr/sbin/system_profiler) then
       set cpu_name_tmp = `/usr/sbin/system_profiler  SPHardwareDataType | grep 'Processor Name:' | sed 's/.* \([^ *]\)/\1/'`
       set cpu_name = `echo ${cpu_name_tmp} | sed "y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/"`

       if ( ! ${status}) then
           if ("${cpu_name}" != "") then
               setenv CPU "${CPU}_${cpu_name}"
           endif 
       endif 
   endif 
else if ("${uname}" == "SunOS") then
   if ($os_major_release > 4) then
       setenv OS "sun5"
       setenv CPU "unknown"
   else 
       setenv OS "sun4"
       setenv CPU "unknown"
   endif
else if ("${uname}" == "WIN32") then
   setenv  OS "win32" 
   setenv CPU "unknown"
else if ("${uname}" == "HP-UX") then
   setenv  OS "hpux" 
   setenv CPU "unknown"
else if (("${uname}" == "IRIX") || ("${uname}" == "IRIX64")) then
   setenv  OS "sgi" 
   setenv CPU "unknown"
else if ("${uname}" == "AIX") then
   setenv  OS "aix" 
   setenv CPU "unknown"
else 
   setenv  OS "unknown" 
   setenv CPU "unknown"
endif 

setenv MACHINE  "${OS}_${CPU}"

# This is not needed so far as we just propogate CUDA support and use that. 
#
set do_gpu = 0

if (${do_gpu}) then
    setenv KJB_HAVE_GPU 0

    if ($?FORCE_GPU) then
        setenv KJB_HAVE_GPU 1
    else if ($?FORCE_NO_GPU) then
        setenv KJB_HAVE_GPU 0
    else
        # A variety of hacks to figure out if we have various kinds of GPUs will
        # eventually be below. 
        #
        set have_tesla = 0
        if (-x /sbin/lspci) then
            set have_tesla = `/sbin/lspci | grep -c 'Tesla'`
        endif 

        if (${have_tesla}) then 
            # setenv KJB_HAVE_GPU 1 
        endif 
    endif 

    if (${KJB_HAVE_GPU}) then
        setenv KJB_GPU_DIR "/gpu"
    else 
        setenv KJB_GPU_DIR ""
    endif 
endif 



setenv UC_OS `echo ${OS} | sed "y/abcdefghijklmnopqrstuvwxyz/ABCDEFGHIJKLMNOPQRSTUVWXYZ/"`
setenv UC_MACHINE `echo ${MACHINE} | sed "y/abcdefghijklmnopqrstuvwxyz/ABCDEFGHIJKLMNOPQRSTUVWXYZ/"`

setenv KJB_HAVE_MACHINE 1 

