#!/bin/csh -f

# set echo 


if (-e "SKIP_REGRESS") then
    exit
endif 


set num_args = $#argv

set program = "$1"
set input = "$2" 
set time_factor = "$3"

set obj_dir = ""
if (${num_args} > 3) set obj_dir = "$4"

       
set test_result = "passed"
set start_time = `date +%H:%M:%S`

echo "Begin testing ${program} with time factor ${time_factor} and input  $input"

${KJB_MKDIR} output/${program}/${obj_dir}
${KJB_MKDIR} output-regress/${program}/${obj_dir}

set save_status = 0 

if ("${input}" == "NULL") then
   # ${obj_dir}${program} ${time_factor} < /dev/null |& grep -v '(ignore line for regression testing)' >& output/${program}/${obj_dir}${input}-${time_factor}-TEMP
   ${obj_dir}${program} ${time_factor} < /dev/null >& output/${program}/${obj_dir}${input}-${time_factor}-TEMP-raw

   if ($status) then
       set save_status = 1
   endif 

   # Kobus, Aug 2016. 
   # We used to include the parens, but that confuses some greps, and serves no
   # real purpose. Adding in an abreviation for it also. `
   grep -v 'ignore line for regression testing' output/${program}/${obj_dir}${input}-${time_factor}-TEMP-raw |& grep -v 'IL4RT' >& output/${program}/${obj_dir}${input}-${time_factor}-TEMP
else
   # ${obj_dir}${program} ${time_factor} < input/${program}/${input}  |& grep -v '(ignore line for regression testing)' >& output/${program}/${obj_dir}${input}-${time_factor}-TEMP
   ${obj_dir}${program} ${time_factor} < input/${program}/${input} >& output/${program}/${obj_dir}${input}-${time_factor}-TEMP-raw

   if ($status) then
       set save_status = 1
   endif 

   # Kobus, Aug 2016. 
   # We used to include the parens, but that confuses some greps, and serves no
   # real purpose. Adding in an abreviation for it also. `
   grep -v 'ignore line for regression testing' output/${program}/${obj_dir}${input}-${time_factor}-TEMP-raw |& grep -v 'IL4RT' >& output/${program}/${obj_dir}${input}-${time_factor}-TEMP
endif 

if ($save_status) then 
   echo " "
   echo "${program} failed regression testing on input ${input} in ${cwd}" 
   echo "(Non-zero exit status)"
   set test_result = "FAILED (status)"
else if (-e output-regress/${program}/${obj_dir}${input}-${time_factor}) then
   ${KJB_DIFF_TEST} output/${program}/${obj_dir}${input}-${time_factor}-TEMP output-regress/${program}/${obj_dir}${input}-${time_factor} > /dev/null

   if ($status) then 
       echo " "
       echo "$program failed regression testing on input ${input} in ${cwd}"
       echo "There is a difference between earlier result and current result."
       echo "    Previous result is: ${cwd}/output-regress/${program}/${obj_dir}${input}-${time_factor}"
       echo "    Current result is: ${cwd}/output/${program}/${obj_dir}${input}-${time_factor}-TEMP"
       echo " "
       echo "Check with: "
       echo "    vimdiff ${cwd}/output-regress/${program}/${obj_dir}${input}-${time_factor} ${cwd}/output/${program}/${obj_dir}${input}-${time_factor}-TEMP"
       echo " "
       echo "If the current result is correct, then the previous result must be removed manually."
       echo "IE: "
       echo "    rm ${cwd}/output-regress/${program}/${obj_dir}${input}-${time_factor}"
       set test_result = "FAILED (diff)"
   else 
       ${KJB_MV} output/${program}/${obj_dir}${input}-${time_factor}-TEMP  output/${program}/${obj_dir}${input}-${time_factor}
   endif
else 
   ${KJB_MV} output/${program}/${obj_dir}${input}-${time_factor}-TEMP  output/${program}/${obj_dir}${input}-${time_factor}
   ${KJB_CP} output/${program}/${obj_dir}${input}-${time_factor} output-regress/${program}/${obj_dir}${input}-${time_factor} 
endif 

set end_time = `date +%H:%M:%S`

echo " Done testing ${program} with time factor ${time_factor} and input  ${input} from ${start_time}  to ${end_time} : ${test_result}"

if ("${test_result}" != "passed") then
    exit 1
endif 


