#
# The strategy here to execute the script "build_shared" which sets up a sub-shell with
# the appropriate environment, and then do a make with Makefile-2. We list
# possible targets here, but for most versions of make, a line below should
# be able to catch all cases. 
#
# IMPORTANT: None of the explicilty mentioned targets on the next non-comment
# line can be actual files or directories. For example, we cannot be attempting
# to make the directory "doc". Since the purpose of this file is to call the
# build_shared script, the dependencies for "doc" will be hidden. If you suspect that
# this is the case for a target XXX, try "./build_shared XXX". 
#
all dir_made clean code depend doc doc_dir_made lint proto regress_clean : 
	./build_shared $@

#
# Need to specify anything that might have an implict rule, in case we forget to
# use the "-r" option. 
#
%.o : FORCE
	./build_shared $@

%.h : FORCE
	./build_shared $@

%.w : FORCE
	./build_shared $@


Makefile : 
	@$(KJB_ECHO) "Dummy rule for Makefile." 


INIT : 
	@$(KJB_ECHO) "Starting in Makefile." 


.DONE :
	@$(KJB_ECHO) "Done in Makefile." 


#
# The catch all line. Any target not handled above should be handled here. This
# works fine with gmake. 
#
% : FORCE
	./build_shared $@


FORCE :
	

