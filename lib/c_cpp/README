This directory currently holds code for just one class.
(Please update the README if it is wrong!)

The class defined in here is called Palette, and it will generate
a set of "distinct" colors.  The original motivation was to create
100 colors for a visualization, such that the colors were all
pairwise visually distinctive.

This is easy to do for 10 colors,
but hard to do for 100 colors, yet this class does OK I think,
using a quasi-random number generator.  I tried other methods such as
using k-means to get distinctive centers, using L*a*b color space
instead of RGB, etc.  The code is still in there, controlled by
preprocessor macros.

The default generation process requires GSL, the Gnu Scientific
Library.  Other generation processes (like the k-means version)
do not.

To use the class, instantiate a Palette object with the palette size
you want.  You can access the member colors directly, of course.
Also, there are some member functions that will *mix* the palette
colors, when given a vector of weights.  This is useful for certain
visualizations.  There are two mixing methods.  The first method to
"mix" is just to choose the color with biggest weight (an L-infinity
approach).  Another mix method is to set the RGB values to the weighted
average of the components (an L-1 approach).  Neither is sophisticated.

Andy Predoehl
18 July 2013

$Id: README 20569 2016-03-18 04:32:32Z predoehl $
